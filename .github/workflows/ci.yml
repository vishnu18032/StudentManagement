# name: Java CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#           architecture: 'x64'

#       - name: Build with Maven
#         run: ./mvnw clean package -DskipTests

#       - name: Upload JAR file as artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: my-artifact
#           path: target/*.jar



name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ${{ github.workspace }}/target

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl stop your-application.service
            scp ${{ github.workspace }}/target/*.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/tp

            sudo systemctl start your-application.service







